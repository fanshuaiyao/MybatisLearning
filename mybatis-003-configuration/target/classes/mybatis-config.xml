<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

<!--    java.util.Properties 是一个Map集合，key和value都是String类型 父类是hashtable-->
<!--    这个可以理解为全局变量-->
    <properties>
        <property name="jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbc.url" value="jdbc:mysql://192.168.103.61:3306/mybatis"/>
        <property name="jdbc.username" value="root"/>
        <property name="jdbc.password" value="123456"/>
    </properties>

<!--    default 代表默认使用的环境  使用mybatis创建sqlSessionFactory的时候 没有指定环境的时候  默认使用哪个-->
    <environments default="development">
<!--        一个环境对应一个数据库-->
        <environment id="development">
<!--            事务管理器 指定使用什么事务管理器  JDBC MANAGED 大小写无所谓  通过Transaction接口进行实例化-->
            <transactionManager type="JDBC"/>
<!--            数据源：为程序提供connection对象  但凡为程序提供数据源的都是connection对象  JDK规定的数据源规范 数据源就是提供connection对象
                type属性是指定用什么方式获取数据源  选择：
                UNPOOLED  不使用数据库连接池 每一次创建新的connection对象: 耗费资源
                POLLED：使用mybatis自身的连接池
                JNDI：使用第三方的连接池：java name directory interface  java命名目录接口
-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>

<!--                poolMaximumActivateConnections 连接对象的上限-->
                <property name="poolMaximumActiveConnections" value="3"/>
<!--                每隔两秒打印日志 并尝试获取连接对象-->
                <property name="poolTimeToWait" value="2000"/>
<!--                10秒超时-->
                <property name="poolMaximumCheckoutTime" value="10000"/>
            </dataSource>
        </environment>
    </environments>


    <mappers>
        <mapper resource="CarMapper.xml"/>
    </mappers>

</configuration>
